openapi: '3.0.0'
info:
  version: '1.0.0'
  title: 'Chat service API'
servers:
  - url: http://localhost:8081
tags:
  - name: private messages
  - name: group chats
paths:
  /list:
    get:
      tags:
        - private messages
      summary: Get private messages
      parameters:
      - name: user_id
        description: User to get messages with
        in: query
        required: true
        schema:
          type: integer
          format: int64
     
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
               type: array
               items: 
                $ref: '#/components/schemas/listed_message'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/unauthorized_response'
  /send:
    post:
      tags:
        - private messages
      summary: Send private message to user
      parameters:
        - name: text
          description: message text
          in: query
          required: true
          schema:
            type: string
        - name: to
          description: User id to send message to
          in: query
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Ok
          content:
              application/json:
                schema:
                  $ref: '#/components/schemas/message'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/unauthorized_response'
  /groups/send:
    post:
      tags:
        - group chats
      summary: Send message to a group chat
      parameters:
        - name: text
          description: message text
          in: query
          required: true
          schema:
            type: string
        - name: group_id
          description: group chat identifier
          in: query
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Ok
          content:
              application/json:
                schema:
                  $ref: '#/components/schemas/message'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/unauthorized_response'
  /groups/add_user:
    post:
      tags:
        - group chats
      summary: Invite user to a group chat
      parameters:
        - name: user_id
          description: user identifier
          in: query
          required: true
          schema:
            type: integer
            format: int64
        - name: group_id
          description: group chat identifier
          in: query
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Ok
          content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ok_response'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/unauthorized_response'
  /groups:
    post:
      tags:
        - group chats
      summary: Create a group chat
      parameters:
        - name: title
          description: group chat name
          in: query
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Ok
          content:
              application/json:
                schema:
                  $ref: '#/components/schemas/group'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/unauthorized_response'
    get:
      tags:
        - group chats
      summary: Get group chat messages
      parameters:
      - name: group_id
        description: group chat identifier to get messages from
        in: query
        required: true
        schema:
          type: integer
          format: int64
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
               type: array
               items: 
                $ref: '#/components/schemas/listed_message'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/unauthorized_response'      
components:
  schemas:
    listed_message:
      type: object
      required:
        - message
        - from_requester
      properties:
        message:
          $ref: '#/components/schemas/message'
        from_requester:
          description: true, if the request author is the message author
          type: boolean

    message:
      type: object
      required:
        - id
        - text
        - created_at
        - author_id
      properties:
        id:
          type: integer
          format: int64
        text:
          description: message text
          type: string
        created_at:
          description: sent at
          type: string
        author_id:
          description: author identifier
          type: integer
          format: int64
        recipient_id:
          description: consumer identifier
          type: integer
          format: int64
        group_id:
          description: group chat identifier
          type: integer
          format: int64

    group:
      type: object
      required:
        - id
        - title
        - admin_id
      properties:
        id:
          type: integer
          format: int64
        title:
          description: group chat name
          type: string
        admin_id:
          description: group chat admin identifier
          type: integer
          format: int64

    unauthorized_response:
      type: object
      required:
        - type
        - title
        - status
        - detail
        - instance
      properties:
        type:
          type: string
        title:
          type: string
        status:
          type: string
        detail:
          type: string
        instance:
          type: string

    ok_response:
      type: object
      required:
        - status
      properties:
        status:
          type: string
        
  securitySchemes:
      basicAuth:     
        type: http
        scheme: basic
security:
  - basicAuth: []
