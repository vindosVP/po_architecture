version: '2.1'

services:
  mai-db-node-ex01:
    build:
      context: mariadb
      dockerfile: Dockerfile
    container_name: mai-db-node-ex01
    restart: unless-stopped
    environment:
      MYSQL_DATABASE: archdb
      MYSQL_USER: stud
      MYSQL_PASSWORD: stud
      MYSQL_ROOT_PASSWORD: '1'
    command: >
      --sql-mode='STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION'
      --general-log=ON
      --log-queries-not-using-indexes=ON
    networks:
      - arch-network
    ports:
      - 3360:3306
    healthcheck:
      test: "/usr/bin/mariadb --user=stud --password=stud --execute \"SHOW DATABASES;\""
      timeout: 20s
      retries: 5
    volumes:
      - mai-db-node-ex01-data:/var/lib/mysql

  mai-db-node-ex02:
    build:
      context: mariadb
      dockerfile: Dockerfile
    container_name: mai-db-node-ex02
    restart: unless-stopped
    environment:
      MYSQL_DATABASE: archdb
      MYSQL_USER: stud
      MYSQL_PASSWORD: stud
      MYSQL_ROOT_PASSWORD: '1'
    command: >
      --sql-mode='STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION'
      --general-log=ON
      --log-queries-not-using-indexes=ON
    networks:
      - arch-network
    ports:
      - 3361:3306
    healthcheck:
      test: "/usr/bin/mariadb --user=stud --password=stud --execute \"SHOW DATABASES;\""
      timeout: 20s
      retries: 5
    volumes:
      - mai-db-node-ex02-data:/var/lib/mysql

  mai-db-node-ex03:
    build:
      context: mariadb
      dockerfile: Dockerfile
    container_name: mai-db-node-ex03
    restart: unless-stopped
    environment:
      MYSQL_DATABASE: archdb
      MYSQL_USER: stud
      MYSQL_PASSWORD: stud
      MYSQL_ROOT_PASSWORD: '1'
    command: >
      --sql-mode='STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION'
      --general-log=ON
      --log-queries-not-using-indexes=ON
    networks:
      - arch-network
    ports:
      - 3362:3306
    healthcheck:
      test: "/usr/bin/mariadb --user=stud --password=stud --execute \"SHOW DATABASES;\""
      timeout: 20s
      retries: 5
    volumes:
      - mai-db-node-ex03-data:/var/lib/mysql

  sharded-db:
    build:
      context: proxysql
    healthcheck:
      test: "/usr/bin/mysql -h 127.0.0.1 -P 6033 --user=stud --password=stud --execute \"SHOW DATABASES;\""
      timeout: 20s
      retries: 5
    networks:
      - arch-network
    ports:
      # Mysql Client Port
      - 6033:6033
      # Mysql Admin Port
      - 6032:6032
    depends_on:
      - mai-db-node-ex01
      - mai-db-node-ex02
      - mai-db-node-ex03
    volumes:
      - proxysql-data:/var/lib/proxysql

  cache:
    image: redis:6.2-alpine
    restart: always
    ports:
      - 6379:6379
    command: redis-server --save 20 1 --loglevel warning
    networks:
      - arch-network
    volumes:
      - cache:/data

  zookeeper:
    image: zookeeper
    container_name: zookeeper
    environment:
        ZOOKEEPER_CLIENT_PORT: 2181
        ZOOKEEPER_TICK_TIME: 2000
        ZOOKEEPER_INIT_LIMIT: 5
    networks:
      - arch-network

  kafka-node-1:
    image: wurstmeister/kafka
    container_name: kafka-node-1
    depends_on:
      - zookeeper
    ports:
      - 2181:2181
      - 9092:9092
    networks:
      - arch-network
    environment:
        KAFKA_BROKER_ID: 1
        KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
        KAFKA_ADVERTISED_HOST_NAME: kafka-node-1
        ADVERTISED_PORT: 9092
        ADVERTISED_HOST_NAME: kafka-node-1
        KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
        KAFKA_CREATE_TOPICS: "event_server:1:1"

  user_writer_service:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: user_writer_service
    environment:
      - DB_HOST=sharded-db
      - DB_PORT=6033
      - DB_LOGIN=stud
      - DB_PASSWORD=stud
      - DB_DATABASE=archdb
      - CACHE=cache:6379
      - QUEUE_HOST=kafka-node-1:9092
      - QUEUE_TOPIC=event_server
      - QUEUE_GROUP_ID=0
    entrypoint: /po_architecture/build/user_writer_service
    networks:
      - arch-network
    depends_on:
      - sharded-db
      - cache
      - kafka-node-1

  user_service:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: user_service
    environment:
      - DB_HOST=sharded-db
      - DB_PORT=6033
      - DB_LOGIN=stud
      - DB_PASSWORD=stud
      - DB_DATABASE=archdb
      - CACHE=cache:6379
      - QUEUE_HOST=kafka-node-1:9092
      - QUEUE_TOPIC=event_server
      - QUEUE_GROUP_ID=0
    ports:
      - 8080:8080
    entrypoint: /po_architecture/build/app
    networks:
      - arch-network
    depends_on:
      cache:
        condition: service_started
      sharded-db:
        condition: service_healthy
        
  chat_service:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: chat_service
    environment:
      - SERVICE_HOST=user_service
      - DB_HOST=sharded-db
      - DB_PORT=6033
      - DB_LOGIN=stud
      - DB_PASSWORD=stud
      - DB_DATABASE=archdb
      - CACHE=cache:6379
      - QUEUE_HOST=kafka-node-1:9092
      - QUEUE_TOPIC=event_server
      - QUEUE_GROUP_ID=0
    ports:
      - 8081:8081
    entrypoint: /po_architecture/build/other_service
    networks:
      - arch-network
    depends_on:
      sharded-db:
        condition: service_healthy

volumes:
  mai-db-node-ex01-data:
  mai-db-node-ex02-data:
  mai-db-node-ex03-data:
  proxysql-data:
  cache:

networks:
  arch-network:
    driver: "bridge"
    external: false